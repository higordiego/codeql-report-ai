name: Release Musl Build

on:
  release:
    types: [published]   # dispara quando você publica uma Release no GitHub
  workflow_dispatch:     # permite rodar manualmente se quiser

env:
  BIN_NAME: codeql-ai    # nome do binário do projeto

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # garante tags disponíveis

      - name: Show tag/version
        run: |
          echo "Release tag: ${{ github.event.release.tag_name }}"
          git describe --tags --always || true

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Pull rust-musl-builder
        run: docker pull ekidd/rust-musl-builder:stable

      - name: Build (x86_64-unknown-linux-musl)
        run: |
          docker run --rm \
            -v "$PWD":/home/rust/src \
            -e CARGO_HOME=/home/rust/.cargo \
            ekidd/rust-musl-builder:stable \
            cargo build --release
          ls -lah target/x86_64-unknown-linux-musl/release/

      - name: Preparar artefatos
        id: prep
        shell: bash
        run: |
          TAG="${{ github.event.release.tag_name }}"
          # Se rodar manualmente (workflow_dispatch), TAG pode vir vazio:
          if [ -z "$TAG" ]; then
            TAG="$(git describe --tags --always || echo manual)"
          fi

          SRC="target/x86_64-unknown-linux-musl/release/${BIN_NAME}"
          OUT="${BIN_NAME}-${TAG}-x86_64-unknown-linux-musl"

          test -f "$SRC" || { echo "Binário não encontrado em $SRC"; exit 1; }

          cp "$SRC" "./${OUT}"
          chmod +x "./${OUT}"

          # Checksum
          sha256sum "./${OUT}" | tee "./${OUT}.sha256"

          echo "artifact=${OUT}" >> "$GITHUB_OUTPUT"
          echo "checksum=${OUT}.sha256" >> "$GITHUB_OUTPUT"

      - name: Anexar na Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.prep.outputs.artifact }}
            ${{ steps.prep.outputs.checksum }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
