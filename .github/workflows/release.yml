name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-gnu:
    name: Build (GNU) x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: x86_64-unknown-linux-gnu

      - name: System deps (OpenSSL via sistema)
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends build-essential pkg-config libssl-dev ca-certificates
          sudo update-ca-certificates
          openssl version -a || true
          pkg-config --libs --cflags openssl || true

      - name: Cache cargo (gnu)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-gnu-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-gnu-

      - name: Build (release)
        env:
          OPENSSL_NO_VENDOR: "1"
          PKG_CONFIG_ALLOW_CROSS: "1"
        run: |
          set -euxo pipefail
          cargo build --release --target x86_64-unknown-linux-gnu

      - name: Package (gnu)
        run: |
          set -euxo pipefail
          mkdir -p release/linux-x86_64
          cp target/x86_64-unknown-linux-gnu/release/codeql-ai release/linux-x86_64/codeql-ai
          chmod +x release/linux-x86_64/codeql-ai
          cat > release/linux-x86_64/README.md << 'EOF'
          # Code Report - linux-x86_64 Release
          ## Installation
          chmod +x codeql-ai && sudo mv codeql-ai /usr/local/bin/codeql-ai
          ## Usage
          ./codeql-ai -i results.json -p /path/to/project
          EOF
          tar -czf codeql-ai-linux-x86_64.tar.gz -C release/linux-x86_64 .

      - name: Upload artifact (gnu)
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86_64-release
          path: codeql-ai-linux-x86_64.tar.gz

  build-musl:
    name: Build (MUSL) x86_64-unknown-linux-musl
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    container:
      image: ekidd/rust-musl-builder:stable

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show env
        run: |
          rustc -Vv || true
          cargo -V || true
          openssl version -a || true

      - name: Cache cargo (musl)
        uses: actions/cache@v4
        with:
          path: |
            /home/rust/.cargo/registry
            /home/rust/.cargo/git
            /root/.cargo/registry
            /root/.cargo/git
            target
          key: linux-musl-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            linux-musl-cargo-

      - name: Build (release, musl)
        env:
          OPENSSL_STATIC: "1"
          PKG_CONFIG_ALLOW_CROSS: "1"
        run: |
          set -euxo pipefail
          rustup target add x86_64-unknown-linux-musl || true
          cargo build --release --target x86_64-unknown-linux-musl

      - name: Package (musl)
        run: |
          set -euxo pipefail
          mkdir -p release/linux-x86_64-musl
          cp target/x86_64-unknown-linux-musl/release/codeql-ai release/linux-x86_64-musl/codeql-ai
          chmod +x release/linux-x86_64-musl/codeql-ai
          cat > release/linux-x86_64-musl/README.md << 'EOF'
          # Code Report - linux-x86_64-musl Release
          ## Installation
          chmod +x codeql-ai && sudo mv codeql-ai /usr/local/bin/codeql-ai
          ## Usage
          ./codeql-ai -i results.json -p /path/to/project
          EOF
          tar -czf codeql-ai-linux-x86_64-musl.tar.gz -C release/linux-x86_64-musl .

      - name: Upload artifact (musl)
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86_64-musl-release
          path: codeql-ai-linux-x86_64-musl.tar.gz

  release:
    name: Create Release
    needs: [build-gnu, build-musl]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      packages: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Extract version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: List downloaded artifacts
        run: |
          echo "Downloaded artifacts:"
          find artifacts -type f -maxdepth 2 -name "*.tar.gz" -print

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Code Report ${{ steps.version.outputs.version }}
          body: |
            ## Code Report ${{ steps.version.outputs.version }}

            ### üîç Advanced Security Analysis Tool
            Powered by AI & Static Analysis

            ### üöÄ What's New
            - CodeQL + ChatGPT integration
            - Markdown security reports
            - Clean CLI
            - Linux x86_64 (GNU & musl)

            ### üì¶ Installation
            **GNU (Ubuntu/Debian/CentOS)**
            ```bash
            tar -xzf codeql-ai-linux-x86_64.tar.gz
            sudo mv codeql-ai /usr/local/bin/
            ```
            **musl (Alpine/Docker est√°tico)**
            ```bash
            tar -xzf codeql-ai-linux-x86_64-musl.tar.gz
            sudo mv codeql-ai /usr/local/bin/
            ```

            ### üéØ Quick Start
            ```bash
            ./codeql-ai -i results.json -p /path/to/project -v debug
            ```

            Run `./codeql-ai --help` for full usage.
          draft: false
          prerelease: false
          files: |
            artifacts/linux-x86_64-release/codeql-ai-linux-x86_64.tar.gz
            artifacts/linux-x86_64-musl-release/codeql-ai-linux_x86_64-musl.tar.gz
